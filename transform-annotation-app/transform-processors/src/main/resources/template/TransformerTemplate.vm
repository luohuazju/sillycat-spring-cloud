package ${clazz.packageName};

#foreach($import in $importList)
import $import;
#end

public class ${clazz.name}Transformer {
#foreach($m in $transformers)
    ${m.modifier} static ${m.to.name} ${m.name}(${m.from.name} from) {
        ${m.to.name} to = new ${m.to.name}();
#set    ($from = $m.fromFields)
#set    ($to = $m.toFields)
#foreach($fieldName in $m.commonFieldNames)
#set        ($f = $from[$fieldName])
#set        ($t = $to[$fieldName])
#set        ($ftype = $f.type)
#set        ($ttype = $t.type)
#if         (${ftype.ableToTransformTo($ttype)})
        to.${t.setter}(${ftype.transformTo($ttype, "from.${f.getter}()")});
#else
        ${processor.error($t.element, "Unable to transform $fieldName from ${ttype.fullName} -> ${ftype.fullName}. Try to add @Transformer annotation to the types or unify the type of the field.")}
#end
#end

        // Fields only in ${m.from.name}:
#foreach($fieldName in $m.fromOnlyFieldNames)
        // ${from[$fieldName].type.fullName}: $fieldName
#end

        // Fields only in ${m.to.name}:
#foreach($fieldName in $m.toOnlyFieldNames)
        // ${to[$fieldName].type.fullName}: $fieldName
#end
        return to;
    }
#end
}